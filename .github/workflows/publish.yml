name: SqlQueryBuilder release pipeline

on:
  push:
    tags: [ v* ]

jobs:
  publish:

    name: Publish
    runs-on: ubuntu-latest

    steps:
      # Build & Test
      - uses: actions/checkout@v3

      - name: Setup dotnet sdk
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Restore backend dependencies
        run: dotnet restore
      - name: Build backend
        run: dotnet build --configuration Release --no-restore

      - name: Start database for integration tests
        run: docker-compose -f docker/docker-compose.yaml up -d

      - name: Run unit tests
        run: >
          dotnet test
          --no-build
          --verbosity normal
          --filter FullyQualifiedName~SqlQueryBuilder.Test
      - name: Run integration tests
        run: >
          dotnet test
          --no-build
          --verbosity normal
          --filter FullyQualifiedName~SqlQueryBuilder.IntegrationTest

      # Extract version number (v1.2.3) from the tag (refs/tags/v1.2.3)
      - name: Extract version number
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      # Create NuGet package (without the v version prefix)
      - name: Create Core package
        run: >
          dotnet pack
          --configuration Release
          --no-restore
          -p:PackageVersion=${RELEASE_VERSION:1}
          SqlQueryBuilder.Core/SqlQueryBuilder.Core.csproj
      - name: Create MySql package
        run: >
          dotnet pack
          --configuration Release
          --no-restore
          -p:PackageVersion=${RELEASE_VERSION:1}
          SqlQueryBuilder.MySql/SqlQueryBuilder.MySql.csproj
      - name: Create Testing package
        run: >
          dotnet pack
          --configuration Release
          --no-restore
          -p:PackageVersion=${RELEASE_VERSION:1}
          SqlQueryBuilder.Testing/SqlQueryBuilder.Testing.csproj

      # Create github release
      - name: Create github release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: Release ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: ${{ contains(env.RELEASE_VERSION, '-') }}
          token: ${{ secrets.GITHUB_TOKEN }}
          files: "**/*.nupkg"

      # Upload the NuGet package
      - name: Upload release to NuGet
        run: >
          dotnet nuget push **/*.nupkg
          --source https://api.nuget.org/v3/index.json
          -k ${{ secrets.NUGET_API_KEY }}
          --skip-duplicate
